(function() {
  var ColumnChart;

  if (window.$ == null) {
    window.$ = require('jquery-commonjs');
  }

  ColumnChart = (function() {
    ColumnChart.prototype.loadDefaults = function() {
      return this.defaults = {
        data: [],
        axisY: [],
        noData: false
      };
    };

    function ColumnChart(options) {
      this.loadDefaults();
      this.options = $.extend({}, this.defaults, options);
      this.$el = options.el;
      if (!this.$el.hasClass('column-chart')) {
        this.$el.addClass('column-chart');
      }
      this.$axisY = this.createAxisY();
      this.$content = this.options.noData ? this.createNoData() : this.createBars();
    }

    ColumnChart.prototype.render = function() {
      return this.$el.append(this.$axisY).append(this.$content);
    };

    ColumnChart.prototype.createElement = function(clazz) {
      return $('<div></div>').addClass(clazz);
    };

    ColumnChart.prototype.createAxisY = function() {
      var $axis, $marker, item, _i, _len, _ref;
      $axis = this.createElement('column-chart-axis-y');
      _ref = this.options.axisY;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        item = _ref[_i];
        $marker = this.createElement('column-chart-axis-marker').text(item.label).css({
          bottom: item.position + '%'
        });
        $axis.append($marker);
      }
      return $axis;
    };

    ColumnChart.prototype.createBars = function() {
      var $bar, $bars, $label, index, item, _i, _len, _ref;
      $bars = this.createElement('column-chart-bars');
      _ref = this.options.data;
      for (index = _i = 0, _len = _ref.length; _i < _len; index = ++_i) {
        item = _ref[index];
        $label = this.createElement('column-chart-bar-label').text(item.label);
        $('<span></span>').addClass('column-chart-bar-unit').text(item.unit);
        if (item.details != null) {
          $bar = this.createElement('column-chart-bar').css({
            height: item.value + '%'
          }).append($label).append(this.createBubble(item.details));
        }
        $bars.append($bar);
      }
      return $bars;
    };

    ColumnChart.prototype.createBubble = function(details) {
      var $bubble, $leftSide, $rightSide;
      $bubble = this.createElement('column-chart-bubble pillow-tooltip');
      $leftSide = this.createElement('column-chart-bubble-side column-chart-bubble-side-left');
      $rightSide = this.createElement('column-chart-bubble-side column-chart-bubble-side-right');
      this.createElement('column-chart-bubble-details column-chart-bubble-percentage').text(details.percentage).appendTo($leftSide);
      this.createElement('column-chart-bubble-details column-chart-bubble-percentage-sign').text('%').appendTo($leftSide);
      this.createElement('column-chart-bubble-details column-chart-bubble-label').text(details.label).appendTo($rightSide);
      this.createElement('column-chart-bubble-details column-chart-bubble-value').text(details.value).appendTo($rightSide);
      $leftSide.appendTo($bubble);
      $rightSide.appendTo($bubble);
      return $bubble;
    };

    ColumnChart.prototype.createNoData = function() {
      return this.createElement('column-chart-no-data').text('no data');
    };

    return ColumnChart;

  })();

  module.exports = ColumnChart;

}).call(this);
