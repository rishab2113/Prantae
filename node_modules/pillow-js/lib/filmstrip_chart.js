(function() {
  var ChartBase, FilmstripChart,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  if (window.$ == null) {
    window.$ = require('jquery-commonjs');
  }

  ChartBase = require('./chart_base');

  FilmstripChart = (function(_super) {
    __extends(FilmstripChart, _super);

    FilmstripChart.prototype.loadDefaults = function() {
      return this.defaults = {
        animationDuration: 1500,
        autoAnimate: true,
        maxLabel: null,
        avg: null,
        value: 0
      };
    };

    function FilmstripChart(options) {
      this.options = options;
      this.loadDefaults();
      this.options = $.extend({}, this.defaults, this.options);
      this.$el = options.el;
      this.rail = this.createElement('pillow-filmstrip-rail');
      this.gauge = this.createElement('pillow-filmstrip-gauge');
      if (this.options.avg != null) {
        this.notch = this.createElement('pillow-filmstrip-notch');
      }
      if (this.options.maxLabel) {
        this.maxLabel = this.createElement('pillow-filmstrip-max-label');
      }
      this.rail.append(this.gauge, this.notch, this.maxLabel);
      this.$el.append(this.rail);
    }

    FilmstripChart.prototype.createElement = function(className) {
      return $('<div></div>').addClass(className);
    };

    FilmstripChart.prototype.render = function() {
      if (this.options.autoAnimate) {
        return this.animate();
      }
    };

    FilmstripChart.prototype.animate = function() {
      var endTime, requestAnimFrameListener, startTime, _ref;
      this.$el.trigger('animationstart');
      startTime = new Date().getTime();
      endTime = startTime + this.options.animationDuration;
      if ((_ref = this.maxLabel) != null) {
        _ref.text(this.options.maxLabel);
      }
      requestAnimFrameListener = (function(_this) {
        return function() {
          var progress;
          progress = _this.getAnimationProgress(new Date().getTime(), startTime, endTime);
          _this.setGauge(progress);
          if (_this.notch != null) {
            _this.setNotch(progress);
          }
          if (progress === 1) {
            return _this.$el.trigger('animationend');
          } else {
            return requestAnimationFrame(function() {
              return requestAnimFrameListener();
            });
          }
        };
      })(this);
      return requestAnimFrameListener();
    };

    FilmstripChart.prototype.getAnimationProgress = function(currentTime, startTime, endTime) {
      var delta, progress;
      progress = (currentTime - startTime) / (endTime - startTime);
      if (progress > 1) {
        progress = 1;
      }
      delta = this.makeEaseOut(progress);
      return delta;
    };

    FilmstripChart.prototype.makeEaseOut = function(progress) {
      return 1 - Math.pow(1 - progress, 5);
    };

    FilmstripChart.prototype.getProgressValue = function(percentage) {
      return Math.round(this.options.value * percentage * 100) / 100;
    };

    FilmstripChart.prototype.formatValue = function(value) {
      return parseFloat(value).toFixed();
    };

    FilmstripChart.prototype.setGauge = function(progress) {
      return this.gauge.css('width', this.options.value * progress + "%");
    };

    FilmstripChart.prototype.setNotch = function(progress) {
      return this.notch.css('left', this.options.avg * progress + "%");
    };

    return FilmstripChart;

  })(ChartBase);

  module.exports = FilmstripChart;

}).call(this);
